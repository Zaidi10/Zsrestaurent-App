{"version":3,"sources":["shared/avatar1.jpg","components/LoadingComponent.js","shared/baseUrl.js","components/CardComponent.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DishdetailsComponent.js","components/FavoriteComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/ModeButton.js","components/HomeComponent.js","components/Login.js","components/UsernameMessage.js","components/SignUp.js","Redux/actionCreaters.js","Redux/actionTypes.js","components/MainComponent.js","Redux/dishes.js","Redux/comment.js","Redux/promotions.js","Redux/leaders.js","Redux/auth.js","Redux/favorites.js","Redux/cart.js","Redux/username.js","Redux/forms.js","Redux/error.js","Redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","type","color","secondaryColor","height","width","baseUrl","process","React","memo","connect","state","cart","dish","handleAddCart","handleRemoveCart","cartItems","cartIds","isDark","ele","useRef","index","indexOf","_id","Card","to","CardImg","src","image","alt","name","veg","ref","onClick","element","current","style","overflow","maxHeight","display","description","aria-hidden","price","Button","number","sp","children","props","useState","modal","setModal","makePayment","token","fetchPayment","productItems","totalPrice","Math","round","Number","EPSILON","onOpened","toggle","handleUnautheicatedCheckout","addError","menu","dishes","map","key","cartjsx","item","ListGroupItem","isLoading","errMess","window","innerWidth","CardHeader","CardBody","length","ListGroup","isAuthenticated","opened","ComponentClass","shippingAddress","billingAddress","currency","stripeKey","amount","class","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","fontSize","totalItems","Header","handleWindowClick","e","myRef","target","classList","contains","setState","isNavOpen","errorOccured","store","addNotification","title","message","insert","showIcon","container","animationIn","animationOut","dismiss","duration","loginSucess","paymentSucess","logoutSucess","componentDidUpdate","auth","cartReset","isError","removeError","toggleNav","handleLogout","logoutUser","togglePop","ispopoverOpen","handleCloseNav","createRef","addEventListener","Fragment","Navbar","this","export","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","outline","id","Popover","placement","PopoverHeader","PopoverBody","require","user","username","firstname","lastname","isFetching","Jumbotron","Component","Footer","href","CommentButton","handleToggle","isModalOpen","submitComment","values","postComment","dishId","rating","comment","onSubmit","Row","Col","md","Label","htmlFor","select","model","textarea","rows","RenderComments","comments","commentJsx","in","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","RenderDish","favorite","postFavorite","transformProps","exitTransform","top","CardImgOverlay","CardTitle","category","RenderMenuItem","deleteFavorite","Media","tag","left","middle","object","body","heading","Favorites","favorites","list","withRouter","required","val","maxLength","len","minLength","undefined","isNumber","isNaN","validEmail","test","Contact","handleSubmit","bind","postFeedBack","telnum","email","agree","contactType","frameBorder","border","allowFullScreen","tabIndex","role","text","placeholder","validators","show","messages","size","offset","check","checkbox","defaultValue","value","About","RenderLeader","leader","designation","leaders","ModeButton","callhandleModeChange","extra","handleModeChange","disabled","modeRef","RenderCard","CardSubtitle","Home","setTimeout","myVar","prevProps","prevState","handleClick","dishesLoading","disherrMess","promotion","promoLoading","promoErrMess","leadersLoading","leadersErrMess","LoginError","Login","componentDidMount","history","push","pathname","handleLogin","loginUser","password","preventDefault","Form","FormGroup","Input","innerRef","input","remember","UsernameMessage","exists","SignUp","handleSignup","signUp","signUsername","signPassword","handleFocusout","formRef","onBlur","getRef","autoComplete","dishesFailed","payload","addDishes","addComments","failedComments","PromosLoading","addPromos","promos","failedPromos","LeadersLoading","addLeaders","failedLeaders","loginError","cred","dispatch","creds","fetch","method","headers","JSON","stringify","then","res","ok","status","Error","err","statusText","response","error","json","sucess","localStorage","setItem","fetchFavorites","catch","favoritesLoading","bearer","getItem","addFavorites","favoritesFailed","gotUser","usernameLoading","usernameErr","errmess","Main","homecomponent","filter","featured","promotions","promo","addCart","removeCart","fetchDishes","fetchComments","fetchPromos","fetchLeaders","errors","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","exact","render","cardIds","match","params","commentsErrMess","some","resetFeedbackForm","fetchUsers","newComment","credentials","addComment","console","log","alert","newFeedback","date","toISOString","feedback","reload","actions","reset","removeItem","product","open","receipt_url","Dishes","Comments","action","concat","Promotions","Leaders","Auth","slice","toUpperCase","errMesWWs","Cart","obj","copycartItems","index1","n","copycartIds","splice","Username","InitialFeedback","Errors","middleware","thunk","createStore","combineReducers","createForms","applyMiddleware","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a90f0c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar1.c4987958.jpg\";","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12 loader-container\">\r\n            <Loader\r\n                type=\"Oval\"\r\n                color=\"#171a29\"\r\n                secondaryColor=\"#9575CD\"\r\n                height={50}\r\n                width={50}\r\n\r\n\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const baseUrl = process.env.REACT_APP_BASE_URL;","import React, { useRef } from 'react'\r\nimport { Card, CardImg, Button } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return state.cart;\r\n}\r\n\r\nfunction CardComp({ dish, handleAddCart, handleRemoveCart, cartItems, cartIds, isDark }) {\r\n    const ele = useRef(null);\r\n\r\n    let index = cartIds.indexOf(dish._id);\r\n\r\n    const handelClick = () => {\r\n        let element = ele.current;\r\n        element.style.overflow = \"visible\";\r\n        element.style.maxHeight = \"unset\";\r\n        element.style.display = \"block\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-6 col-lg-6 col-xl-4 menu_col\">\r\n            <Card className={`menu_items  ${isDark ? \"items-back-color font-color\" : \"items-back-color-light font-color-light\"}`} >\r\n                <Link to={`/menu/${dish._id}`}>\r\n                    <CardImg className=\"item-image\" width=\"254\" height=\"254\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <div className=\"veg-non-veg\">\r\n                        {!dish.veg ? <img width=\"40\" alt=\"non-veg\" src=\"https://img.icons8.com/fluent/48/000000/non-vegetarian-food-symbol.png\" /> : <img width=\"40\" alt=\"veg\" src=\"https://img.icons8.com/fluent/48/000000/vegetarian-food-symbol.png\" />}\r\n                    </div>\r\n                </Link>\r\n                <div className=\"items-details\">\r\n                    <div className=\"item_name\">{dish.name}</div>\r\n                    <div ref={ele} onClick={handelClick} className=\"item_description\">{dish.description}</div>\r\n                    <div className=\"itme_rating\">\r\n                        <div className=\"rat_div\" >\r\n                            <i className=\"fa fa-star fa-1 rat_icon\" aria-hidden=\"true\" ></i>\r\n                            <span>4.3</span>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"price_div .clearfix\"><span>₹ {dish.price}</span></div>\r\n                        {index < 0 ?\r\n                            <div className=\"add-con\">\r\n                                <Button className=\"add_button\" onClick={() => { handleAddCart(dish) }}>ADD+</Button>\r\n                            </div>\r\n                            :\r\n                            <div className=\"add-con\">\r\n                                <div className=\"span_con\"><span className=\"minus\" onClick={() => { handleRemoveCart(dish) }}>-</span><span className=\"bt-nm-cr\">{cartItems[index].number}</span><span className=\"plus\" onClick={() => { handleAddCart(dish) }}>+</span></div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(connect(mapStatetoProps)(CardComp));","import React, { useState } from 'react'\r\nimport { Card, CardBody, CardHeader, ListGroup, ListGroupItem, Modal, ModalBody, ModalHeader, ModalFooter, Button } from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport CardComp from \"./CardComponent\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\n\r\nconst sp = ({ children, ...props }) => (\r\n    <div className=\"str-btn\" {...props}>{children}</div>\r\n)\r\n\r\nfunction Menu(props) {\r\n\r\n\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const makePayment = (token) => {\r\n        props.fetchPayment(token, { productItems: props.cartItems, price: props.totalPrice + 50 + Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 1) / 1 });\r\n\r\n    }\r\n    const onOpened = () => {\r\n\r\n    }\r\n\r\n    const handleCheckoutClick = () => {\r\n        toggle();\r\n    }\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const handleUnautheicatedCheckout = () => {\r\n        if (modal) {\r\n            toggle();\r\n        }\r\n        props.addError();\r\n    }\r\n\r\n    function handleModal() {\r\n\r\n        toggle();\r\n    }\r\n\r\n\r\n    const menu = props.dishes.map(dish => {\r\n\r\n        return (\r\n            <CardComp isDark={props.isDark} key={dish._id} dish={dish} handleAddCart={props.handleAddCart} handleRemoveCart={props.handleRemoveCart} />\r\n        );\r\n    })\r\n    const cartjsx = props.cartItems.map((item) => {\r\n\r\n        return (<ListGroupItem key={item.name} className=\"cart-li\"><span>{item.name}  ({item.number})</span><span className=\"cart-price\">₹ {item.price}</span></ListGroupItem>);\r\n    })\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container-fluid menu_container back-color\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container-fluid menu_container back-color\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes != null) {\r\n\r\n        return (\r\n\r\n            <div className={`container-fluid menu_container ${props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 menu_head_col\">\r\n                        <h3 className=\"\">Menu</h3>\r\n                        <hr className=\"hr_\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-8 col-ipad\">\r\n                        <div className=\"row\">\r\n                            {menu}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        {window.innerWidth >= 1024 ?\r\n                            <Card className=\"cart-card\">\r\n                                <CardHeader className=\"bg-white cart-header\">Cart<span><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></span></CardHeader>\r\n                                <CardBody className=\"card-bd-about cart-body\">\r\n                                    {props.cartItems.length > 0\r\n                                        ?\r\n                                        <div>\r\n                                            <ListGroup className=\"cart-list\">\r\n                                                {cartjsx}\r\n                                            </ListGroup>\r\n                                            <div className=\"bill-con\">\r\n                                                <div className=\"bill-head\">Bill Details</div>\r\n                                                <div className=\"bil-items\">Items Total <span className=\"cart-price\">₹ {props.totalPrice}</span></div>\r\n                                                <div className=\"bil-items\">Delivery Charge <span className=\"cart-price\">₹ 50</span></div>\r\n                                                <div className=\"bil-items\">Taxes <span className=\"cart-price\">₹ {Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 100) / 100}</span></div>\r\n                                                <hr className=\"cart-hr\" />\r\n                                                <div className=\"to-pay\">To Pay <span className=\"to-pay-span\" >₹ {props.totalPrice + 50 + Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 1) / 1}</span></div>\r\n\r\n                                            </div>\r\n                                            <div className=\"cart-button-con\">\r\n                                                {props.isAuthenticated ?\r\n                                                    <StripeCheckout opened={onOpened} ComponentClass={sp} shippingAddress billingAddress={false} currency=\"INR\" stripeKey={process.env.REACT_APP_KEY} token={makePayment} name=\"Checkout\" amount={(props.totalPrice + 50 + Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 1) / 1) * 100}>\r\n                                                        <Button className=\"cartButtom\">Checkout <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                                    </StripeCheckout>\r\n                                                    : <Button onClick={handleUnautheicatedCheckout} className=\"cartButtom\">Checkout <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        : <h3 className=\"empty-cart\">Cart is Empty!</h3>\r\n                                    }\r\n                                </CardBody>\r\n                            </Card>\r\n                            :\r\n                            <Modal isOpen={modal} toggle={toggle} >\r\n                                <ModalHeader toggle={toggle}>Cart<span><i className=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></span></ModalHeader>\r\n                                <ModalBody>\r\n                                    {props.cartItems.length > 0\r\n                                        ?\r\n                                        <div>\r\n                                            <ListGroup className=\"cart-list\">\r\n                                                {cartjsx}\r\n                                            </ListGroup>\r\n                                            <div className=\"bill-con\">\r\n                                                <div className=\"bill-head\">Bill Details</div>\r\n                                                <div className=\"bil-items\">Items Total <span className=\"cart-price\">₹ {props.totalPrice}</span></div>\r\n                                                <div className=\"bil-items\">Delivery Charge <span className=\"cart-price\">₹ 50</span></div>\r\n                                                <div className=\"bil-items\">Taxes <span className=\"cart-price\">₹ {Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 100) / 100}</span></div>\r\n                                                <hr className=\"cart-hr\" />\r\n                                                <div className=\"to-pay\">To Pay <span className=\"to-pay-span\" >₹ {props.totalPrice + 50 + Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 1) / 1}</span></div>\r\n\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                        : <h3 className=\"empty-cart\">Cart is Empty!</h3>\r\n                                    }\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    {props.cartItems.length > 0 ?\r\n                                        <div className=\"cart-button-con\">\r\n                                            {props.isAuthenticated ?\r\n                                                <StripeCheckout opened={onOpened} ComponentClass={sp} shippingAddress billingAddress={false} currency=\"INR\" stripeKey={process.env.REACT_APP_KEY} token={makePayment} name=\"Checkout\" amount={(props.totalPrice + 50 + Math.round((props.totalPrice * 0.15 + Number.EPSILON) * 1) / 1) * 100}>\r\n                                                    <Button onClick={handleCheckoutClick} className=\"cartButtom\">Checkout <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                                </StripeCheckout>\r\n                                                : <Button onClick={handleUnautheicatedCheckout} className=\"cartButtom\">Checkout <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i></Button>\r\n                                            }\r\n                                        </div>\r\n                                        : \"\"\r\n                                    }\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        }\r\n                    </div>\r\n                    {window.innerWidth < 1024 ?\r\n                        <div className=\"bottom-div\"><button onClick={handleModal} className=\"mobile-cart-button\"><i className=\"fa fa-shopping-cart\" style={{ fontSize: 30 }} aria-hidden=\"true\"></i> <span className=\"no-cart\">{props.totalItems}</span></button></div>\r\n                        : \"\"\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default React.memo(Menu);\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar, NavbarToggler, Collapse, NavItem, Jumbotron, Popover, PopoverHeader, PopoverBody, Button } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport ReactNotification from 'react-notifications-component'\r\nimport { store } from 'react-notifications-component';\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            isNavOpen: false,\r\n            ispopoverOpen: false,\r\n            isAuthenticated: this.props.auth.isAuthenticated,\r\n            cartReset: false,\r\n        }\r\n        window.addEventListener(\"click\", (e) => this.handleWindowClick(e))\r\n    }\r\n    handleWindowClick = (e) => {\r\n        if (this.myRef.current) {\r\n            if (!e.target.classList.contains(\"navbar-toggler\") && !e.target.classList.contains(\"navbar-toggler-icon\")) {\r\n                this.setState({ isNavOpen: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    errorOccured = () => {\r\n        store.addNotification({\r\n            title: \"You are not Loged In!\",\r\n            message: \"Please Login or Signin first!\",\r\n            type: \"info\",\r\n            insert: \"top\",\r\n            showIcon: true,\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 4000,\r\n            }\r\n        });\r\n    }\r\n\r\n    loginSucess = () => {\r\n        store.addNotification({\r\n            title: \"Sucess!\",\r\n            message: \"You are Succefully Loged In!\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            showIcon: true,\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 4000,\r\n\r\n            }\r\n        });\r\n    }\r\n    paymentSucess = () => {\r\n        store.addNotification({\r\n            title: \"Sucess!\",\r\n            message: \"Your Transaction was successfull!\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            showIcon: true,\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 8000,\r\n            }\r\n        });\r\n    }\r\n    logoutSucess = () => {\r\n        store.addNotification({\r\n            title: \"Sucess!\",\r\n            message: \"You are Succefully Loged Out!\",\r\n            type: \"success\",\r\n            insert: \"top\",\r\n            showIcon: true,\r\n            container: \"top-left\",\r\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n            dismiss: {\r\n                duration: 4000,\r\n\r\n            }\r\n        });\r\n    }\r\n    componentDidUpdate = () => {\r\n        if (this.props.auth.isAuthenticated !== this.state.isAuthenticated) {\r\n            this.setState({ isAuthenticated: this.props.auth.isAuthenticated });\r\n            if (this.props.auth.isAuthenticated) {\r\n                this.loginSucess();\r\n            }\r\n            else {\r\n                this.logoutSucess();\r\n            }\r\n\r\n        }\r\n        if (this.props.cartReset !== this.state.cartReset) {\r\n            if (this.props.cartReset) {\r\n                this.paymentSucess()\r\n            }\r\n            this.setState({ cartReset: this.props.cartReset })\r\n        }\r\n        if (this.props.isError) {\r\n            this.errorOccured();\r\n            this.props.removeError();\r\n        }\r\n    }\r\n    toggleNav = () => {\r\n        this.setState({ isNavOpen: !this.state.isNavOpen });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    }\r\n    togglePop = () => {\r\n\r\n        this.setState({ ispopoverOpen: !this.state.ispopoverOpen });\r\n    }\r\n    handleCloseNav = () => {\r\n\r\n        this.setState({ isNavOpen: !this.state.isNavOpen });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ReactNotification />\r\n                <Navbar className={`${this.props.isDark ? \"header-con navbar-dark\" : \"header-con-light navbar-light\"}`} export expand=\"md\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                        <Collapse ref={this.myRef} isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg head-icon\"></span>Home</NavLink></NavItem>\r\n                                {!this.props.auth.isAuthenticated ?\r\n                                    (<><NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/login\"><span className=\"fa fa-sign-in fa-lg head-icon\"></span>Login</NavLink></NavItem>\r\n                                        <NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/signup\"><span className=\"fa fa-sign-in fa-lg head-icon\"></span>Sign Up</NavLink></NavItem>\r\n                                    </>)\r\n                                    : (<><NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/favorites\"><span className=\"fa fa-heart fa-lg\"></span>Favorites</NavLink></NavItem></>)\r\n                                }\r\n                                <NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/aboutus\"><span className=\"fa fa-info fa-lg head-icon\"></span>About</NavLink></NavItem>\r\n                                <NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/menu\"><span className=\"fa fa-list fa-lg head-icon\"></span>Menu</NavLink></NavItem>\r\n                                <NavItem className={`${this.props.isDark ? \"nav_li_item\" : \"nav_li_item-light\"}`}><NavLink className=\"nav-link\" to=\"/contactus\"><span className=\"fa fa-address-card fa-lg head-icon\"></span>Contact Us</NavLink></NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    {!this.props.auth.isAuthenticated ?\r\n                                        \"\"\r\n                                        :\r\n                                        <div>\r\n\r\n                                            <Button outline className=\"pop_button\" id=\"Popover1\" type=\"button\">\r\n                                                <i className=\"fa fa-user-circle-o icon-user\" aria-hidden=\"true\"></i>\r\n                                            </Button>\r\n                                            <Popover placement=\"bottom\" isOpen={this.state.ispopoverOpen} target=\"Popover1\" toggle={this.togglePop}>\r\n                                                <PopoverHeader className=\"pop-head\">Profile</PopoverHeader>\r\n                                                <PopoverBody className=\"pop-body\"><div>\r\n                                                    <img width=\"140\" height=\"130\" src={require('../shared/avatar1.jpg')} alt=\"avatar\" ></img>\r\n                                                </div>\r\n                                                    <div className=\"username_pop\">{this.props.user.username}</div>\r\n                                                    <div className=\"user-names\">{this.props.user.firstname} {this.props.user.lastname}</div>\r\n                                                </PopoverBody>\r\n                                            </Popover>\r\n\r\n                                            <Button outline onClick={this.handleLogout}>\r\n                                                <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                    {this.props.auth.isFetching ?\r\n                                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                    : null\r\n                                                }\r\n                                            </Button>\r\n                                        </div>\r\n                                    }\r\n\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron className={`${this.props.isDark ? \"jummbo\" : \"jummbo-light\"}`}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row row-header jumbo_content\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Zaidi'S Resturent</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={`footer  ${props.isDark ? \"footer-con font-color\" : \"footer-con-light font-color-light\"}`}>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address className={`${props.isDark ? \"addr\" : \"\"}`}>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"zaidisuleman19@gmail.com\">\r\n                                zaidisuleman19@gmail.com</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">Follow us.</div>\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google btn-footer\" href=\"\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook btn-footer\" href=\"https://www.facebook.com/suleman.zaidi1\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin btn-footer\" href=\"https://www.linkedin.com/in/suleman-zaidi\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter btn-footer\" href=\"\"><i className=\"fa fa-twitter\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center cpy-div\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2020 Z's Resturent</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport { Card, CardImg, CardImgOverlay, CardBody, CardTitle, Button, Modal, ModalBody, ModalHeader, Row, Col, Label } from \"reactstrap\";\r\nimport { Control, LocalForm } from \"react-redux-form\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n\r\nclass CommentButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n    }\r\n    handleToggle = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n    }\r\n    submitComment = (values) => {\r\n        this.handleToggle();\r\n        this.props.postComment(this.props.dishId, values.rating, values.comment);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button onClick={this.handleToggle}><i className=\"fa fa-lg fa-pencil\" aria-hidden=\"true\"></i> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.handleToggle}>\r\n                    <ModalHeader toggle={this.handleToggle}>Comment</ModalHeader>\r\n                    <ModalBody>\r\n\r\n                        <LocalForm onSubmit={this.submitComment}>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <Control.select className=\"form-control\" model=\".rating\" name=\"rating\" id=\"rating\" >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <Control.textarea rows=\"6\" className=\"form-control\" model=\".comment\" name=\"comment\" id=\"comment\" />\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n\r\n\r\n                        </LocalForm>\r\n\r\n\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nfunction RenderComments({ comments, dishId, postComment, isDark }) {\r\n    let commentJsx = \"\";\r\n    if (comments !== null) {\r\n\r\n        commentJsx =\r\n            <Stagger in >\r\n                {comments.map(comment => {\r\n\r\n                    /*this is to show the date in correct format as like Feb, 2012 */\r\n                    // let date = month[comment.date.substring(5, 7) * 1] + \", \" + comment.date.substring(0, 4);\r\n                    return (\r\n                        <Fade in key={comment._id}>\r\n                            <li className={`${isDark ? \"comment-item\" : \"comment-item-light\"}`} key={comment._id}>\r\n                                <p><span className=\"comment-author\">{comment.author.firstname}</span> <span className=\"comment-date\">{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.updatedAt)))} </span></p>\r\n                                <p>{comment.comment}</p>\r\n                            </li>\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n\r\n    }\r\n\r\n    return (<div className=\"col-12 col-md-12 m-1\">\r\n        <ul className=\"list-unstyled\">\r\n            <h4 className=\"\">Comments</h4>\r\n            {commentJsx}\r\n            <CommentButton dishId={dishId} postComment={postComment} />\r\n        </ul>\r\n    </div>);\r\n}\r\nfunction RenderDish({ dish, favorite, postFavorite, isDark }) {\r\n    if (dish === null) {\r\n        return (\r\n            \"\"\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-12 col-md-7 detail-con\">\r\n                    <FadeTransform in\r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card className=\"det-card\">\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardImgOverlay>\r\n                                <Button outline color=\"primary\" onClick={() => favorite ? \"\" : postFavorite(dish._id)}>\r\n                                    {favorite ?\r\n                                        <span className=\"fa fa-heart\"></span>\r\n                                        :\r\n                                        <span className=\"fa fa-heart-o\"></span>\r\n                                    }\r\n                                </Button>\r\n                            </CardImgOverlay>\r\n                            <CardBody className={`${isDark ? \"det-card-body\" : \"det-card-body-light\"}`}>\r\n                                <CardTitle className=\"det-title\">{dish.name}</CardTitle>\r\n\r\n                                <div className={`${isDark ? \"det-des\" : \"det-des-light\"}`}>\r\n                                    {dish.description}\r\n                                </div>\r\n                                <div className={`row ${isDark ? \"det-bottom\" : \"det-bottom-light\"}`}>\r\n                                    <div className={`col-4 ${isDark ? \"det-b-col\" : \"det-b-col-light\"}`}>{dish.category}</div>\r\n                                    <div className={`col-4 ${isDark ? \"det-b-col\" : \"det-b-col-light\"}`}>{dish.price}</div>\r\n                                    <div className={`col-4 ${isDark ? \"det-b-col\" : \"det-b-col-light\"}`}>\r\n                                        {!dish.veg ? <img width=\"30\" alt=\"non-veg\" src=\"https://img.icons8.com/fluent/48/000000/non-vegetarian-food-symbol.png\" /> : <img width=\"30\" alt=\"veg\" src=\"https://img.icons8.com/fluent/48/000000/vegetarian-food-symbol.png\" />}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nfunction DishdDetails(props) {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    if (props.errMess) {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className={`container-fluid menu_container ${props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 menu_head_col\">\r\n                        <h3 className=\"\">Menu</h3>\r\n                        <hr className=\"hr_\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} isDark={props.isDark} favorite={props.favorite} postFavorite={props.postFavorite} />\r\n                    <RenderComments isDark={props.isDark} dishId={props.dish._id} postComment={props.postComment} comments={props.comments} />\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default React.memo(DishdDetails);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Media, Button } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nfunction RenderMenuItem({ dish, deleteFavorite }) {\r\n    return (\r\n        <Media tag=\"li\">\r\n\r\n            <Media left middle>\r\n                <Media className=\"media-image\" style={{ height: 254, width: 254 }} object src={baseUrl + dish.image} alt={dish.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5 media_body\">\r\n                <Media heading>{dish.name}</Media>\r\n                <p>{dish.description}</p>\r\n                <Button outline color=\"danger\" onClick={() => deleteFavorite(dish._id)}>\r\n                    <span className=\"fa fa-times\"></span>\r\n                </Button>\r\n            </Media>\r\n\r\n        </Media>\r\n    );\r\n}\r\n\r\nclass Favorites extends Component {\r\n\r\n\r\n    // componentDidUpdate = () => {\r\n    //     if (!this.props.isAuthenticated) {\r\n    //         this.props.history.push(\"/home\");\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        if (this.props.favorites.isLoading) {\r\n\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.favorites.errMess) {\r\n            return (\r\n                <div className={`container-fluid menu_container ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                    <div className=\"row\">\r\n                        <h4>{this.props.favorites.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (this.props.favorites.favorites) {\r\n            const favorites = this.props.favorites.favorites.dishes.map((dish) => {\r\n                return (\r\n                    <div key={dish._id} className=\"col-12 mt-1 mb-5\">\r\n                        <RenderMenuItem dish={dish} deleteFavorite={this.props.deleteFavorite} />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className={`container-fluid menu_container ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 menu_head_col\">\r\n                            <h3>My Favorites</h3>\r\n                            <hr class=\"hr_\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Media className=\"media_list\" list>\r\n                            {favorites}\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className={`container-fluid menu_container ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"nofav-con\">\r\n                            <h4 className=\"nofav-head\">You have no favorites</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Favorites);","import React, { Component } from 'react';\r\nimport { Button, Row, Label, Col } from \"reactstrap\"\r\nimport { Control, LocalForm, Errors, } from \"react-redux-form\";\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => {\r\n    if (val === undefined) {\r\n        return true;\r\n    }\r\n    return val && (val.length >= len)\r\n};\r\nconst isNumber = (val) => {\r\n    if (val === undefined) {\r\n        return true;\r\n    }\r\n    return !isNaN(Number(val))\r\n};\r\nconst validEmail = (val) => {\r\n    if (val === undefined) {\r\n        return true;\r\n    }\r\n    return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n};\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n\r\n        if (!this.props.isAuthenticated) {\r\n            this.props.addError();\r\n            return;\r\n\r\n        }\r\n        this.props.postFeedBack(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={`container-fluid menu_container ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 menu_head_col\">\r\n                        <h3 className=\"\">Contact Us</h3>\r\n                        <hr class=\"hr_\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row info-div\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address className={`${this.props.isDark ? \"addr\" : \"addr-dark\"}`}>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto: zaidisuleman19@gmail.com\"> zaidisuleman19@gmail.com</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                        <iframe className=\"if-map\" title=\"map\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3603.1340851009786!2d75.64967981545178!3d25.433780378301947!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x396f0964ad164e29%3A0x58bc98ccd98afca4!2sPolice%20Lines%2C%20Bundi%2C%20Rajasthan%20323001!5e0!3m2!1sen!2sin!4v1599143317822!5m2!1sen!2sin\" width=\"400\" height=\"250\" frameBorder=\"0\" style={{ border: 0 }} allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\"></iframe>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" href=\"mailto: zaidisuleman19@gmail.com\" className=\"btn btn-success\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content form-row \">\r\n                    <div className=\"col-12\">\r\n                        <h3 className=\"feed-head\">Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-12 form-col\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)} className=\"form_\">\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox defaultValue={false} model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select defaultValue=\"Tel.\" model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"Tel.\">Tel.</option>\r\n                                        <option value=\"Email\">Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const RenderLeader = (props) => {\r\n        return (\r\n            <Media tag=\"li\" className=\"leader-item\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + props.leader.image} />\r\n                </Media>\r\n                <Media body className=\"ml-5\">\r\n                    <Media heading>{props.leader.name}</Media>\r\n                    <p>{props.leader.designation}</p>\r\n                    {props.leader.description}\r\n                </Media>\r\n            </Media>\r\n        );\r\n    };\r\n\r\n    var leaders = \"\";\r\n    if (props.isLoading) {\r\n        leaders = (<Loading />);\r\n    }\r\n    else if (props.errMess) {\r\n        leaders = (<h4>{props.errMess}</h4>)\r\n\r\n    }\r\n    else {\r\n\r\n        leaders =\r\n            <Stagger in >\r\n                {props.leaders.map((leader) => {\r\n                    return (\r\n                        <Fade in>\r\n                            <RenderLeader leader={leader} />\r\n                        </Fade>\r\n                    );\r\n                })}\r\n            </Stagger>\r\n    }\r\n\r\n    return (\r\n        <div className={`container-fluid menu_container ${props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 menu_head_col\">\r\n                    <h2>About Us</h2>\r\n                    <hr className=\"hr_\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"row info-div\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h3>Our History</h3>\r\n                    <p>Started in 2010, Z's Resturent quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <Card className=\"card-about\">\r\n                        <CardHeader className=\"bg-primary text-white\">More About the Creater</CardHeader>\r\n                        <CardBody className=\"card-bd-about\">\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card className=\"card2-about\">\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0 quote\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row leaders-con\">\r\n                <div className=\"col-12\">\r\n                    <h3>Corporate Leadership</h3>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react'\r\n\r\nclass ModeButton extends Component {\r\n    callhandleModeChange = () => {\r\n        if (this.props.extra === \"\") {\r\n            this.props.handleModeChange();\r\n        }\r\n    }\r\n    render() {\r\n        if (this.props.isDark) {\r\n            return (<React.Fragment><span className=\"change-theme\">Theme</span><div disabled onClick={this.callhandleModeChange} className=\"parent-mode-div\"><div ref={this.modeRef} className=\"child-mode-div\" ></div></div></React.Fragment>)\r\n        }\r\n        else {\r\n            return (<React.Fragment><span className=\"change-theme\">Theme</span><div disabled onClick={this.callhandleModeChange} className=\"parent-mode-div-light\"><div ref={this.modeRef} className=\"child-mode-div-light\" ></div></div></React.Fragment>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModeButton;","import React, { Component, useRef } from 'react'\r\nimport {\r\n    Card, CardImg, CardBody, CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport ModeButton from \"./ModeButton\"\r\n\r\n\r\n\r\nfunction RenderCard({ item, isLoading, errMess, isDark, extra }) {\r\n    const ele = useRef(null);\r\n\r\n    const handelClick = () => {\r\n        let element = ele.current;\r\n        element.style.overflow = \"visible\";\r\n        element.style.maxHeight = \"unset\";\r\n        element.style.display = \"block\"\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <Card className={`menu_items ${isDark ? \"items-back-color\" + extra : \"items-back-color-light\" + extra}`}>\r\n                <CardImg className=\"item-image\" width=\"254\" height=\"254\" src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody className=\"items-details\">\r\n                    <CardTitle className=\"item_name\">\r\n                        {item.name}\r\n                    </CardTitle>\r\n                    {item.designation ? <CardSubtitle className=\"item_name\">{item.designation}</CardSubtitle> : null}\r\n                    <div ref={ele} onClick={handelClick} className=\"item_description\">{item.description}</div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            extra: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        if (this.state.extra !== \"\") {\r\n            setTimeout(() => {\r\n                this.setState({ extra: \"\" });\r\n                this.myVar = null;\r\n            }, 4000);\r\n        }\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        if (this.props.isDark !== prevProps.isDark) {\r\n            this.setState({ extra: \"-home\" });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (this.props.isDark !== nextProps.isDark) {\r\n    //         this.setState({ extra: \"-home\" });\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={`container-fluid menu_container ${this.props.isDark ? \"font-color back-color\" + this.state.extra : \"font-color-light back-color-light\" + this.state.extra}`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 menu_head_col\">\r\n                            <h3>Home <ModeButton extra={this.state.extra} onClick={this.handleClick} handleModeChange={this.props.handleModeChange} isDark={this.props.isDark} /> </h3>\r\n\r\n                            <hr className=\"hr_\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row align-items-start\">\r\n                        <div className=\"col-12 col-md m-1 menu_col large\">\r\n                            <RenderCard item={this.props.dish} isDark={this.props.isDark} extra={this.state.extra} isLoading={this.props.dishesLoading} errMess={this.props.disherrMess} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md m-1 menu_col large\">\r\n                            <RenderCard item={this.props.promotion} isDark={this.props.isDark} extra={this.state.extra} isLoading={this.props.promoLoading} errMess={this.props.promoErrMess} />\r\n                        </div>\r\n                        <div className=\"col-12 col-md m-1 menu_col large\">\r\n                            <RenderCard item={this.props.leader} isDark={this.props.isDark} extra={this.state.extra} isLoading={this.props.leadersLoading} errMess={this.props.leadersErrMess} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction LoginError(props) {\r\n    if (props.errMess) {\r\n        return <div style={{ color: \"#dc3545\" }}>{props.errMess}</div>\r\n    }\r\n    else {\r\n        return (<div></div>)\r\n    }\r\n\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.props.history.push({ pathname: \"/menu\" });\r\n        }\r\n    }\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n    handleLogin = (e) => {\r\n        this.props.loginUser({ username: this.username.value, password: this.password.value });\r\n        e.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div className=\"container-fluid\">\r\n            <div className={`row form-con-row ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                <Form className={`login-from ${this.props.isDark ? \"items-back-color font-color\" : \"items-back-color-light font-color-light\"}`} onSubmit={this.handleLogin}>\r\n                    <h3 className=\"login_header\">Log In</h3>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input type=\"text\" name=\"username\" id=\"username\" innerRef={(input) => { this.username = input }} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"username\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" innerRef={(input) => { this.password = input }} />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup check>\r\n                        <Label check>\r\n                            <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input) => this.remember = input} />\r\n                Remember me\r\n            </Label>\r\n                    </FormGroup>\r\n                    <LoginError errMess={this.props.errMess} />\r\n                    <Button className=\"login-button\" type=\"submit\" value=\"submit\" >Login</Button>\r\n                </Form>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n}\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Loader from 'react-loader-spinner'\r\nconst mapStatetoProps = (state) => {\r\n    return state.username;\r\n}\r\nclass UsernameMessage extends Component {\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (<div className=\"col-12 loader-container_username\">\r\n                <Loader\r\n                    type=\"Oval\"\r\n                    color=\"#171a29\"\r\n                    secondaryColor=\"#9575CD\"\r\n                    height={20}\r\n                    width={20}\r\n\r\n\r\n                />\r\n\r\n            </div>);\r\n        }\r\n        else if (!this.props.exists) {\r\n            return (<div></div>);\r\n        }\r\n        else {\r\n            return (<div style={{ color: \"#dc3545\" }}>Username not available!!</div>);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStatetoProps)(UsernameMessage);","import React, { Component } from 'react';\r\nimport { FormGroup, Button } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport UsernameMessage from \"./UsernameMessage\";\r\nconst required = (val) => val && val.length;\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.myRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        if (this.props.isAuthenticated) {\r\n            this.props.history.push({ pathname: \"/menu\" });\r\n        }\r\n    }\r\n    componentDidUpdate = () => {\r\n\r\n        if (this.props.isAuthenticated) {\r\n            this.props.history.push({ pathname: \"/menu\" });\r\n        }\r\n    }\r\n    handleSignup = (values, e) => {\r\n\r\n        if (this.props.exists) {\r\n\r\n            return;\r\n        }\r\n\r\n        this.props.signUp({ username: values.signUsername, firstname: values.firstname, lastname: values.lastname, password: values.signPassword });\r\n\r\n    }\r\n\r\n    handleFocusout = () => {\r\n        // this.props.fetchUsers(this.myRef.current.value);\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"container-fluid\">\r\n            <div className={`row form-con-row ${this.props.isDark ? \"font-color back-color\" : \"font-color-light back-color-light\"}`}>\r\n                <LocalForm className={`login-from ${this.props.isDark ? \"items-back-color font-color\" : \"items-back-color-light font-color-light\"}`} onSubmit={(e, values) => this.handleSignup(e, values)}>\r\n                    <h3 className=\"login_header\">Sign Up</h3>\r\n                    <FormGroup>\r\n\r\n\r\n                        <Control.text onBlur={this.handleFocusout} getRef={() => this.myRef} model=\".signUsername\" id=\"signUsername\" name=\"signUsername\"\r\n                            placeholder=\"Username\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required\r\n                            }}\r\n                        />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".signUsername\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required',\r\n                            }}\r\n                        />\r\n                        <UsernameMessage isLoading={this.props.isLoading} exists={this.props.exists} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n\r\n\r\n                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                            placeholder=\"First Name\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required,\r\n\r\n                            }}\r\n                        />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".firstname\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required'\r\n                            }}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n\r\n\r\n                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                            placeholder=\"Last Name\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required\r\n                            }}\r\n                        />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".lastname\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required'\r\n                            }}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n\r\n                        <Control.password model=\".signPassword\" id=\"signPassword\" name=\"signPassword\"\r\n                            placeholder=\"Password\"\r\n                            autoComplete=\"off\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required\r\n                            }}\r\n                        />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".signPassword\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required'\r\n                            }}\r\n                        />\r\n                    </FormGroup>\r\n                    <Button className=\"login-button\" type=\"submit\" value=\"submit\" >Sign Up</Button>\r\n                </LocalForm>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n}\r\nexport default withRouter(SignUp);\r\n","import * as ActionTypes from \"./actionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\"\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\nexport const postComment = (dishId, rating, comment) => (dispatch) => {\r\n    let newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        comment: comment\r\n    };\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    fetch(baseUrl + \"comments\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(comment => dispatch(addComment(comment)))\r\n        .catch(error => {\r\n            console.log('post comments', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        })\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + \"dishes\")\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(err => {\r\n            dispatch(dishesFailed(err.message));\r\n        })\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\nexport const dishesFailed = (errMess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + \"comments\")\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(err => {\r\n            dispatch(failedComments(err.message));\r\n        });\r\n}\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\nexport const failedComments = (errMess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errMess\r\n})\r\n\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(PromosLoading(true));\r\n    return fetch(baseUrl + \"promotions\")\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(err => {\r\n            dispatch(failedPromos(err.message));\r\n        })\r\n}\r\n\r\nexport const PromosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n})\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\nexport const failedPromos = (errMess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errMess\r\n})\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(LeadersLoading(true));\r\n    return fetch(baseUrl + \"leaders\")\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(err => {\r\n            dispatch(failedLeaders(err.message));\r\n        })\r\n}\r\nexport const LeadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n})\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\nexport const failedLeaders = (errMess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errMess\r\n})\r\n\r\n\r\nexport const postFeedBack = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    let newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    fetch(baseUrl + \"feedback\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                throw err;\r\n            }\r\n        }, (error) => {\r\n            let err = new Error(error.message);\r\n            throw err;\r\n        })\r\n        .then(res => res.json())\r\n        .then(feedback => {\r\n\r\n            alert(\"Thank You for you feedback. Your feedback: \" + JSON.stringify(feedback));\r\n            window.location.reload();\r\n        }\r\n        )\r\n        .catch(error => {\r\n            console.log('post comments', error.message);\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        })\r\n\r\n}\r\n\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n\r\nexport const receiveLogin = (user) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: user.token,\r\n        firstname: user.firstname,\r\n        lastname: user.lastname\r\n    }\r\n}\r\n\r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\nexport const loginUser = (cred) => (dispatch) => {\r\n\r\n    dispatch(requestLogin(cred))\r\n\r\n    return fetch(baseUrl + \"users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(cred)\r\n    })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n\r\n                if (res.status === 401) {\r\n                    let err = new Error(\"Username or Password is incorrect!!\");\r\n                    throw err;\r\n\r\n                }\r\n                else {\r\n                    let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                    err.response = res;\r\n                    throw err;\r\n                }\r\n            }\r\n        }, error => {\r\n            dispatch(loginError(error.message));\r\n        })\r\n        .then((res) => res.json())\r\n        .then(res => {\r\n\r\n            if (res.sucess) {\r\n                localStorage.setItem(\"token\", res.token);\r\n                localStorage.setItem(\"creds\", JSON.stringify(cred))\r\n                dispatch(fetchFavorites());\r\n                dispatch(receiveLogin(res));\r\n            }\r\n            else {\r\n\r\n                var error = new Error(\"Error \" + res.status);\r\n                error.response = res;\r\n                dispatch(loginError(error.message));\r\n            }\r\n        })\r\n        .catch(err => dispatch(loginError(err.message)))\r\n\r\n};\r\n\r\nexport const signUp = (creds) => (dispatch) => {\r\n    return fetch(baseUrl + \"users/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) {\r\n                return res;\r\n            }\r\n            else {\r\n                let err = new Error(\"Erros\" + res.status + \":\" + res.statusText);\r\n                err.response = res;\r\n                throw err;\r\n            }\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            if (res.sucess) {\r\n\r\n\r\n                dispatch(loginUser(res.user));\r\n            }\r\n            else {\r\n                var error = new Error(\"Error \" + res.status);\r\n                error.response = res;\r\n                throw error;\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n        type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n\r\nexport const receiveLogout = () => {\r\n    return {\r\n        type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    dispatch(favoritesFailed(\"Error 401: Unauthorized\"));\r\n    dispatch(receiveLogout())\r\n}\r\n\r\n\r\nexport const postFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ \"_id\": dishId }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(favorites => { dispatch(addFavorites(favorites)); })\r\n        .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\n\r\nexport const deleteFavorite = (dishId) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites/' + dishId, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(favorites => { dispatch(addFavorites(favorites)); })\r\n        .catch(error => dispatch(favoritesFailed(error.message)));\r\n};\r\n\r\nexport const fetchFavorites = () => (dispatch) => {\r\n    dispatch(favoritesLoading(true));\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'favorites', {\r\n        headers: {\r\n            'Authorization': bearer\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(favorites => {\r\n\r\n            dispatch(addFavorites(favorites))\r\n        })\r\n        .catch(error => dispatch(favoritesFailed(error.message)));\r\n}\r\nexport const fetchUsers = (username) => (dispatch) => {\r\n\r\n    dispatch(usernameLoading(true))\r\n\r\n    return fetch(baseUrl + 'users/checkuser', {\r\n        headers: {\r\n            'username': username\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            dispatch(gotUser(res.exists))\r\n        })\r\n        .catch(error => dispatch(usernameErr(error.message)));\r\n}\r\nexport const gotUser = (exists) => ({\r\n    type: ActionTypes.GOT_USERNAME,\r\n    payload: exists\r\n})\r\nexport const usernameLoading = () => ({\r\n    type: ActionTypes.USERNAME_LOADING,\r\n\r\n})\r\nexport const usernameErr = (errMess) => ({\r\n    type: ActionTypes.USERNAME_FAILED,\r\n    payload: errMess\r\n})\r\n\r\nexport const favoritesLoading = () => ({\r\n    type: ActionTypes.FAVORITES_LOADING\r\n});\r\n\r\nexport const favoritesFailed = (errmess) => ({\r\n    type: ActionTypes.FAVORITES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFavorites = (favorites) => ({\r\n    type: ActionTypes.ADD_FAVORITES,\r\n    payload: favorites\r\n});\r\nexport const addCart = (dish) => ({\r\n    type: ActionTypes.ADD_CART,\r\n    payload: dish\r\n});\r\nexport const removeCart = (dish) => ({\r\n    type: ActionTypes.REMOVE_CART,\r\n    payload: dish\r\n});\r\n\r\nexport const resetCart = () => ({\r\n    type: ActionTypes.RESET_CART,\r\n})\r\nexport const addError = () => ({\r\n    type: ActionTypes.SHOW_ERROR,\r\n\r\n});\r\nexport const removeError = () => ({\r\n    type: ActionTypes.HIDE_ERROR,\r\n});\r\n\r\nexport const fetchPayment = (token, product) => (dispatch) => {\r\n    const body = {\r\n        token,\r\n        product\r\n    }\r\n    const headers = {\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n    fetch(baseUrl + 'payments', {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify(body),\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n\r\n            window.open(res.receipt_url, \"_blank\");\r\n            dispatch(resetCart(true));\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n}","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\nexport const FAVORITES_LOADING = 'FAVORITES_LOADING';\r\nexport const FAVORITES_FAILED = 'FAVORITES_FAILED';\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES';\r\nexport const ADD_CART = \"ADD_CART\";\r\nexport const REMOVE_CART = 'REMOVE_CART';\r\nexport const RESET_CART = 'RESET_CART';\r\nexport const GOT_USERNAME = \"GOT_USERNAME\";\r\nexport const USERNAME_LOADING = \"USERNAME_LOADING\";\r\nexport const USERNAME_FAILED = \"USERNAME_FAILED\";\r\nexport const SHOW_ERROR = \"SHOW_ERROR\";\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Menu from \"./MenuComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\"\r\nimport DishdDetails from \"./DishdetailsComponent\";\r\nimport Favorites from \"./FavoriteComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\"\r\nimport Home from \"./HomeComponent\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport { connect } from \"react-redux\"\r\nimport { postComment, postFeedBack, fetchDishes, fetchComments, fetchPromos, fetchLeaders, loginUser, logoutUser, fetchFavorites, postFavorite, deleteFavorite, addCart, removeCart, signUp, fetchUsers, fetchPayment, addError, removeError } from \"../Redux/actionCreaters\"\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nconst mapStatetoProps = (state) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => ({\r\n    postComment: (dishId, author, rating, comment) => dispatch(postComment(dishId, author, rating, comment)),\r\n    postFeedBack: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedBack(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => dispatch(fetchDishes()),\r\n    resetFeedbackForm: () => { dispatch(actions.reset(\"feedback\")) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    loginUser: (creds) => dispatch(loginUser(creds)),\r\n    logoutUser: () => dispatch(logoutUser()),\r\n    fetchFavorites: () => dispatch(fetchFavorites()),\r\n    postFavorite: (dishId) => dispatch(postFavorite(dishId)),\r\n    deleteFavorite: (dishId) => dispatch(deleteFavorite(dishId)),\r\n    addCart: (dish) => dispatch(addCart(dish)),\r\n    removeCart: (dish) => dispatch(removeCart(dish)),\r\n    signUp: (cred) => dispatch(signUp(cred)),\r\n    fetchUsers: (username) => dispatch(fetchUsers(username)),\r\n    fetchPayment: (token, product) => dispatch(fetchPayment(token, product)),\r\n    removeError: () => dispatch(removeError()),\r\n    addError: () => dispatch(addError())\r\n\r\n})\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDark: localStorage.getItem(\"isDark\") ? JSON.parse(localStorage.getItem(\"isDark\")) : false,\r\n        }\r\n    }\r\n    handleModeChange = () => {\r\n        localStorage.setItem(\"isDark\", JSON.stringify(!this.state.isDark));\r\n        this.setState({ isDark: !this.state.isDark })\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n        this.props.fetchFavorites();\r\n    }\r\n    componentDidUpdate = () => {\r\n        if (this.props.favorites.errMess === \"Error 401: Unauthorized\" && this.props.auth.isAuthenticated) {\r\n            this.props.logoutUser();\r\n            this.props.history.push({ pathname: \"/login\" });\r\n        }\r\n\r\n    }\r\n    homecomponent = () => {\r\n        return (<Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            disherrMess={this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n            promoLoading={this.props.promotions.isLoading}\r\n            promoErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n            handleModeChange={this.handleModeChange}\r\n            isDark={this.state.isDark}\r\n        />);\r\n    }\r\n    handleAddCart = (dish) => {\r\n        this.props.addCart(dish);\r\n    }\r\n    handleRemoveCart = (dish) => {\r\n        this.props.removeCart(dish);\r\n    }\r\n\r\n    render() {\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                this.props.auth.isAuthenticated\r\n                    ?\r\n                    <DishdDetails dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n                        isLoading={this.props.dishes.isLoading}\r\n                        errMess={this.props.dishes.errMess}\r\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === match.params.dishId)}\r\n                        commentsErrMess={this.props.comments.errMess}\r\n                        postComment={this.props.postComment}\r\n                        favorite={this.props.favorites.favorites === null ? false : this.props.favorites.favorites.dishes.some((dish) => dish._id === match.params.dishId)}\r\n                        postFavorite={this.props.postFavorite}\r\n                        isDark={this.state.isDark}\r\n                    />\r\n                    :\r\n                    <DishdDetails dish={this.props.dishes.dishes.filter((dish) => dish._id === match.params.dishId)[0]}\r\n                        isLoading={this.props.dishes.isLoading}\r\n                        errMess={this.props.dishes.errMess}\r\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === match.params.dishId)}\r\n                        commentsErrMess={this.props.comments.errMess}\r\n                        postComment={this.props.postComment}\r\n                        favorite={false}\r\n                        postFavorite={this.props.postFavorite}\r\n                        isDark={this.state.isDark}\r\n                    />\r\n            );\r\n        }\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"App\">\r\n                    <Header auth={this.props.auth}\r\n                        logoutUser={this.props.logoutUser}\r\n                        user={this.props.auth.user}\r\n                        isDark={this.state.isDark}\r\n                        cartReset={this.props.cart.cartReset}\r\n                        isError={this.props.errors.isError}\r\n                        removeError={this.props.removeError}\r\n                    />\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                            <Switch>\r\n                                <Route path=\"/home\" component={this.homecomponent} />\r\n                                <Route exact path='/menu' render={() => <Menu addError={this.props.addError} dishes={this.props.dishes.dishes} fetchPayment={this.props.fetchPayment} totalItems={this.props.cart.totalItems} cartItems={this.props.cart.cartItems} cartReset={this.props.cart.cartReset} cartIds={this.props.cart.cardIds} totalPrice={this.props.cart.totalPrice} handleAddCart={this.handleAddCart} handleRemoveCart={this.handleRemoveCart} isAuthenticated={this.props.auth.isAuthenticated} isLoading={this.props.dishes.isLoading} errMess={this.props.dishes.errMess} isDark={this.state.isDark} />} />\r\n                                <Route path=\"/menu/:dishId\" render={DishWithId} isDark={this.state.isDark} />\r\n                                <Route exact path=\"/favorites\" render={() => <Favorites favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} isAuthenticated={this.props.auth.isAuthenticated} isDark={this.state.isDark} />} />\r\n                                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedBack={this.props.postFeedBack} isAuthenticated={this.props.auth.isAuthenticated} addError={this.props.addError} isDark={this.state.isDark} />} />\r\n                                <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} leadersLoading={this.props.leaders.isLoading} leadersErrMess={this.props.leaders.errMess} isDark={this.state.isDark} />} />\r\n                                <Route path=\"/login\" component={() => <Login isAuthenticated={this.props.auth.isAuthenticated} errMess={this.props.auth.errMess} loginUser={this.props.loginUser} isDark={this.state.isDark} />} />\r\n                                <Route path=\"/signup\" render={() => <SignUp isAuthenticated={this.props.auth.isAuthenticated} isLoading={this.props.username.isLoading} signUp={this.props.signUp} fetchUsers={this.props.fetchUsers} exists={this.props.username.exists} isDark={this.state.isDark} />} />\r\n                                <Redirect to=\"/home\" />\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                    <Footer isDark={this.state.isDark} />\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps, mapDispatchtoProps)(Main));","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true, errMess: null, dishes: [] }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: actions.payload, dishes: [] };\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: actions.payload };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport * as ActionTypes from \"./actionTypes\";\r\n\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\n\r\nexport const Promotions = (state = { isLoading: true, errMess: null, promotions: [] }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: actions.payload, promotions: [] }\r\n\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: actions.payload }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import * as ActionTypes from \"./actionTypes\";\r\n\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: actions.payload }\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: actions.payload, leaders: [] }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import * as actionTypes from './actionTypes';\r\nexport const Auth = (state = {\r\n    isLoading: false,\r\n    isAuthenticated: localStorage.getItem('token') ? true : false,\r\n    token: localStorage.getItem('token') ? true : false,\r\n    user: localStorage.getItem(\"creds\") ? JSON.parse(localStorage.getItem(\"creds\")) : null,\r\n    errMess: null\r\n}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: null,\r\n                token: action.token,\r\n                user: { ...state.user, firstname: action.firstname.slice(0, 1).toUpperCase() + action.firstname.slice(1, action.firstname.length), lastname: action.lastname.slice(0, 1).toUpperCase() + action.lastname.slice(1, action.lastname.length) }\r\n            };\r\n        case actionTypes.LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case actionTypes.LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case actionTypes.LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const Favorites = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    favorites: null\r\n}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_FAVORITES:\r\n            return { ...state, isLoading: false, errMesWWs: null, favorites: action.payload };\r\n\r\n        case actionTypes.FAVORITES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, favorites: null };\r\n\r\n        case actionTypes.FAVORITES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, favorites: null };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const Cart = (state = {\r\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\r\n    totalPrice: localStorage.getItem(\"totalPrice\") ? JSON.parse(localStorage.getItem(\"totalPrice\")) : 0,\r\n    cartIds: localStorage.getItem(\"cartIds\") ? JSON.parse(localStorage.getItem(\"cartIds\")) : [],\r\n    totalItems: localStorage.getItem(\"totalItems\") ? JSON.parse(localStorage.getItem(\"totalItems\")) : 0,\r\n    cartReset: false,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_CART:\r\n            let index = state.cartIds.indexOf(action.payload._id)\r\n            if (index < 0) {\r\n                let obj = {\r\n                    \"name\": action.payload.name,\r\n                    \"image\": action.payload.image,\r\n                    \"price\": action.payload.price * 1,\r\n                    \"number\": 1\r\n                }\r\n                let price = state.totalPrice + (action.payload.price * 1);\r\n                localStorage.setItem(\"cartItems\", JSON.stringify([...state.cartItems, obj]));\r\n                localStorage.setItem(\"totalPrice\", JSON.stringify(price));\r\n                localStorage.setItem(\"cartIds\", JSON.stringify([...state.cartIds, action.payload._id]));\r\n                localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems + 1));\r\n                return { ...state, cartItems: [...state.cartItems, obj], totalPrice: price, cartIds: [...state.cartIds, action.payload._id], totalItems: state.totalItems + 1, cartReset: false };\r\n            }\r\n            else {\r\n                let copycartItems = state.cartItems;\r\n                let item = state.cartItems[index];\r\n                item.price += action.payload.price * 1;\r\n                item.number++;\r\n                let price = state.totalPrice + action.payload.price * 1;\r\n                copycartItems[index] = item;\r\n\r\n                localStorage.setItem(\"cartItems\", JSON.stringify([...copycartItems]));\r\n                localStorage.setItem(\"totalPrice\", JSON.stringify(price));\r\n                localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems + 1));\r\n                return { ...state, cartItems: [...copycartItems], totalPrice: price, totalItems: state.totalItems + 1, cartReset: false };\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        case actionTypes.REMOVE_CART:\r\n            let index1 = state.cartIds.indexOf(action.payload._id);\r\n            let n = state.cartItems[index1].number;\r\n            if (n === 1) {\r\n                let copycartItems = state.cartItems;\r\n                let copycartIds = state.cartIds;\r\n                let price = state.totalPrice - action.payload.price * 1;\r\n                copycartItems.splice(index1, 1);\r\n                copycartIds.splice(index1, 1);\r\n                localStorage.setItem(\"cartItems\", JSON.stringify([...copycartItems]));\r\n                localStorage.setItem(\"totalPrice\", JSON.stringify(price));\r\n                localStorage.setItem(\"cartIds\", JSON.stringify([...copycartIds]));\r\n                localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems + 1));\r\n                return { ...state, cartItems: [...copycartItems], totalPrice: price, cartIds: [...copycartIds], totalItems: state.totalItems - 1, cartReset: false };\r\n            }\r\n            else {\r\n                let copycartItems = state.cartItems;\r\n                let price = state.totalPrice - action.payload.price * 1;\r\n                copycartItems[index1].number--;\r\n                copycartItems[index1].price -= action.payload.price * 1;\r\n                localStorage.setItem(\"cartItems\", JSON.stringify([...copycartItems]));\r\n                localStorage.setItem(\"totalPrice\", JSON.stringify(price));\r\n                localStorage.setItem(\"totalItems\", JSON.stringify(state.totalItems + 1));\r\n                return { ...state, cartItems: [...copycartItems], totalPrice: price, totalItems: state.totalItems - 1, cartReset: false };\r\n            }\r\n        case actionTypes.RESET_CART:\r\n            localStorage.removeItem(\"cartItems\");\r\n            localStorage.removeItem(\"totalPrice\");\r\n            localStorage.removeItem(\"totalItems\");\r\n            localStorage.removeItem(\"cartIds\");\r\n            return {\r\n                ...state, cartItems: [],\r\n                totalPrice: 0,\r\n                cartIds: [],\r\n                totalItems: 0,\r\n                cartReset: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Username = (state = { exists: false, isLoading: false, errMess: null }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.GOT_USERNAME:\r\n            return { ...state, isLoading: false, exists: actions.payload, errMess: null };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, exists: true, errMess: actions.payload };\r\n        case ActionTypes.USERNAME_LOADING:\r\n            return { ...state, isLoading: true, exists: true, errMess: null };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import * as ActionTypes from './actionTypes';\r\n\r\nexport const Errors = (state = { isError: false }, actions) => {\r\n    switch (actions.type) {\r\n        case ActionTypes.SHOW_ERROR:\r\n            return ({ ...state, isError: true })\r\n        case ActionTypes.HIDE_ERROR:\r\n            return ({ ...state, isError: false })\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comment\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\nimport { Auth } from \"./auth\"\r\nimport { Favorites } from \"./favorites\";\r\nimport { Cart } from \"./cart\";\r\nimport { Username } from \"./username\"\r\nimport thunk from \"redux-thunk\";\r\n// import logger from \"redux-logger\";\r\nimport { InitialFeedback } from \"./forms\";\r\nimport { Errors } from \"./error\";\r\nconst middleware = [thunk];\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware.push(require('redux-logger').default);\r\n}\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            auth: Auth,\r\n            favorites: Favorites,\r\n            cart: Cart,\r\n            username: Username,\r\n            errors: Errors,\r\n\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n\r\n        }),\r\n        applyMiddleware(...middleware)\r\n    );\r\n    return store;\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport Main from \"./components/MainComponent\";\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { configureStore } from \"./Redux/configureStore\";\nimport { Provider } from \"react-redux\"\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter >\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}